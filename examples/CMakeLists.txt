PROJECT(example)

CMAKE_MINIMUM_REQUIRED(VERSION 3.5)

SET(CMAKE_BUILD_TYPE Debug)

SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_C_STANDARD 17)
ADD_COMPILE_OPTIONS(-Wall -Wextra -Werror)

ADD_LIBRARY(example INTERFACE)
ADD_LIBRARY(example::example ALIAS example)
TARGET_INCLUDE_DIRECTORIES(example INTERFACE .)
TARGET_INCLUDE_DIRECTORIES(example INTERFACE ../src)

ADD_LIBRARY(ev STATIC ./../third_party/libev/ev.c)
TARGET_COMPILE_DEFINITIONS(ev PRIVATE EV_STANDALONE=1)
TARGET_COMPILE_OPTIONS(ev PRIVATE -w)
TARGET_INCLUDE_DIRECTORIES(ev PUBLIC ./../third_party/libev)

TARGET_LINK_LIBRARIES(example INTERFACE ev)

SET(COMMON_LIB example ev)

ADD_EXECUTABLE(Simple Simple.cpp)
TARGET_LINK_LIBRARIES(Simple ${COMMON_LIB})

ADD_EXECUTABLE(proxy proxy.cpp)
TARGET_LINK_LIBRARIES(proxy ${COMMON_LIB})

ADD_EXECUTABLE(mock mock.cpp)
TARGET_LINK_LIBRARIES(mock ${COMMON_LIB})

ADD_EXECUTABLE(balancer balancer.cpp)
TARGET_LINK_LIBRARIES(balancer ${COMMON_LIB})

# ADD_EXECUTABLE(Sql Sql.cpp)
# TARGET_LINK_LIBRARIES(Sql ${COMMON_LIB})

# ADD_EXECUTABLE(Schemaless Schemaless.cpp)
# TARGET_LINK_LIBRARIES(Schemaless ${COMMON_LIB})